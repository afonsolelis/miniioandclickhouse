{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Menu","text":""},{"location":"#clickhouse","title":"Clickhouse","text":""},{"location":"#miniio","title":"Mini.IO","text":""},{"location":"clickhouse/","title":"ClickHouse","text":"<p>ClickHouse \u00e9 um sistema de gerenciamento de banco de dados em colunas que permite consultas anal\u00edticas r\u00e1pidas e eficientes em grandes volumes de dados. Utilizar o ClickHouse com Docker facilita a configura\u00e7\u00e3o e o gerenciamento de inst\u00e2ncias do banco de dados. Este guia ir\u00e1 mostrar como configurar e utilizar o ClickHouse localmente utilizando Docker.</p>"},{"location":"clickhouse/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Docker instalado em sua m\u00e1quina. Se voc\u00ea ainda n\u00e3o tem o Docker instalado, siga as instru\u00e7\u00f5es no site oficial do Docker.</li> </ul>"},{"location":"clickhouse/#passos-para-configuracao","title":"Passos para Configura\u00e7\u00e3o","text":""},{"location":"clickhouse/#1-baixar-a-imagem-do-clickhouse","title":"1. Baixar a Imagem do ClickHouse","text":"<p>Primeiramente, baixe a imagem do ClickHouse do Docker Hub utilizando o seguinte comando:</p> <pre><code>docker pull yandex/clickhouse-server\n</code></pre>"},{"location":"clickhouse/#2-executar-o-container-do-clickhouse","title":"2. Executar o Container do ClickHouse","text":"<p>Ap\u00f3s baixar a imagem, voc\u00ea pode executar um container do ClickHouse com o comando:</p> <pre><code>docker run -d --name clickhouse-server --ulimit nofile=262144:262144 -p 8123:8123 -p 9000:9000 yandex/clickhouse-server\n</code></pre>"},{"location":"clickhouse/#3-verificar-o-container-em-execucao","title":"3. Verificar o Container em Execu\u00e7\u00e3o","text":"<p>Para verificar se o container est\u00e1 em execu\u00e7\u00e3o, utilize o comando:</p> <pre><code>docker ps\n</code></pre> <p>Voc\u00ea deve ver algo similar a isso:</p> <pre><code>CONTAINER ID   IMAGE                   COMMAND                 CREATED        STATUS        PORTS                                           NAMES\n&lt;container_id&gt; yandex/clickhouse-server \"/entrypoint.sh\"   &lt;some_time&gt;    Up &lt;some_time&gt;   8123/tcp, 9000/tcp, 9009/tcp                    clickhouse-server\n</code></pre>"},{"location":"clickhouse/#4-acessar-o-clickhouse-client","title":"4. Acessar o ClickHouse Client","text":"<p>Para acessar o client do ClickHouse, execute um novo container interativo ligado ao container do ClickHouse server:</p> <pre><code>docker run -it --link clickhouse-server:clickhouse-server yandex/clickhouse-client --host clickhouse-server\n</code></pre>"},{"location":"clickhouse/#5-executar-consultas-sql","title":"5. Executar Consultas SQL","text":"<p>Agora voc\u00ea pode executar comandos SQL no ClickHouse. Por exemplo, para criar uma tabela e inserir dados:</p> <pre><code>CREATE TABLE exemplo (\n    id UInt32,\n    nome String\n) ENGINE = Log;\n\nINSERT INTO exemplo VALUES (1, 'Alice'), (2, 'Bob');\n\nSELECT * FROM exemplo;\n</code></pre>"},{"location":"clickhouse/#6-parar-e-remover-o-container","title":"6. Parar e Remover o Container","text":"<p>Para parar o container do ClickHouse:</p> <pre><code>docker stop clickhouse-server\n</code></pre> <p>Para remover o container:</p> <pre><code>docker rm clickhouse-server\n</code></pre>"},{"location":"clickhouse/#configuracao-de-volume-persistente-opcional","title":"Configura\u00e7\u00e3o de Volume Persistente (Opcional)","text":"<p>Para garantir que seus dados persistam mesmo ap\u00f3s reiniciar o container, voc\u00ea pode configurar volumes do Docker:</p> <pre><code>docker run -d --name clickhouse-server --ulimit nofile=262144:262144 -p 8123:8123 -p 9000:9000 -v /path/to/clickhouse/data:/var/lib/clickhouse yandex/clickhouse-server\n</code></pre> <p>Substitua <code>/path/to/clickhouse/data</code> pelo caminho onde voc\u00ea deseja armazenar os dados do ClickHouse em sua m\u00e1quina local.</p>"},{"location":"clickhouse/#mais","title":"Mais","text":"<p>Com esses passos, voc\u00ea pode facilmente configurar e utilizar o ClickHouse localmente utilizando Docker. Essa configura\u00e7\u00e3o facilita o desenvolvimento e a realiza\u00e7\u00e3o de testes com o ClickHouse sem a necessidade de configura\u00e7\u00e3o complexa.</p> <p>Se voc\u00ea tiver alguma d\u00favida ou problema, consulte a documenta\u00e7\u00e3o oficial do ClickHouse para obter mais detalhes e suporte.</p>"},{"location":"clickhouse/#entendendo-o-clickhouse-e-comparacoes-com-google-bigquery","title":"Entendendo o ClickHouse e Compara\u00e7\u00f5es com Google BigQuery","text":""},{"location":"clickhouse/#como-o-clickhouse-funciona","title":"Como o ClickHouse Funciona","text":"<p>ClickHouse \u00e9 um banco de dados orientado a colunas, projetado para processamento de consultas anal\u00edticas em alta velocidade. Aqui est\u00e3o alguns dos principais conceitos e funcionalidades que explicam seu funcionamento:</p>"},{"location":"clickhouse/#1-armazenamento-em-colunas","title":"1. Armazenamento em Colunas","text":"<p>Diferente dos bancos de dados tradicionais que armazenam dados em linhas, o ClickHouse armazena dados em colunas. Isso permite que consultas que precisam acessar apenas algumas colunas possam ler menos dados, resultando em maior velocidade.</p>"},{"location":"clickhouse/#2-engine-de-armazenamento","title":"2. Engine de Armazenamento","text":"<p>ClickHouse utiliza diferentes engines de armazenamento para diferentes casos de uso. A engine mais comum \u00e9 a <code>MergeTree</code>, que oferece alta performance em leitura e escrita, al\u00e9m de suporte a parti\u00e7\u00f5es e \u00edndices.</p>"},{"location":"clickhouse/#3-mergetree","title":"3. MergeTree","text":"<p><code>MergeTree</code> \u00e9 a engine de armazenamento mais usada no ClickHouse, oferecendo recursos como: - Particionamento: Divis\u00e3o de dados em partes menores, facilitando a manuten\u00e7\u00e3o e o gerenciamento. - Ordena\u00e7\u00e3o: Dados podem ser ordenados por uma chave espec\u00edfica, melhorando a performance de consultas. - Replica\u00e7\u00e3o: Suporte a replica\u00e7\u00e3o para alta disponibilidade.</p>"},{"location":"clickhouse/#4-maptree","title":"4. MapTree","text":"<p><code>MapTree</code> \u00e9 uma variante da <code>MergeTree</code> que permite armazenar dados em uma estrutura hier\u00e1rquica. \u00c9 \u00fatil para armazenar dados que naturalmente formam uma \u00e1rvore, como categorias de produtos ou estruturas organizacionais.</p>"},{"location":"clickhouse/#5-consulta-distribuida","title":"5. Consulta Distribu\u00edda","text":"<p>ClickHouse suporta execu\u00e7\u00e3o de consultas distribu\u00eddas em v\u00e1rios servidores, permitindo escalabilidade horizontal. Isso significa que voc\u00ea pode aumentar a capacidade de processamento adicionando mais n\u00f3s ao cluster.</p>"},{"location":"clickhouse/#6-compressao","title":"6. Compress\u00e3o","text":"<p>ClickHouse utiliza compress\u00e3o avan\u00e7ada de dados para reduzir o espa\u00e7o em disco e melhorar a performance de leitura. Os algoritmos de compress\u00e3o s\u00e3o selecionados automaticamente com base no tipo de dados.</p>"},{"location":"clickhouse/#comparacao-com-google-bigquery","title":"Compara\u00e7\u00e3o com Google BigQuery","text":""},{"location":"clickhouse/#1-armazenamento-de-dados","title":"1. Armazenamento de Dados","text":"<ul> <li>ClickHouse: Armazenamento em colunas com compress\u00e3o avan\u00e7ada, otimizado para consultas anal\u00edticas r\u00e1pidas.</li> <li>BigQuery: Armazenamento em colunas com arquitetura serverless, escalando automaticamente conforme necess\u00e1rio.</li> </ul>"},{"location":"clickhouse/#2-escalabilidade","title":"2. Escalabilidade","text":"<ul> <li>ClickHouse: Escalabilidade horizontal atrav\u00e9s de execu\u00e7\u00e3o distribu\u00edda e replica\u00e7\u00e3o.</li> <li>BigQuery: Escalabilidade autom\u00e1tica e gerenciamento de recursos feito pelo Google, eliminando a necessidade de administra\u00e7\u00e3o manual.</li> </ul>"},{"location":"clickhouse/#3-performance-de-consulta","title":"3. Performance de Consulta","text":"<ul> <li>ClickHouse: Excelente performance em consultas anal\u00edticas devido ao armazenamento em colunas e compress\u00e3o eficiente. Requer configura\u00e7\u00e3o e ajuste manual para otimiza\u00e7\u00e3o.</li> <li>BigQuery: Performance de consulta robusta e ajustada automaticamente pelo Google, facilitando o uso para grandes volumes de dados sem necessidade de configura\u00e7\u00e3o detalhada.</li> </ul>"},{"location":"clickhouse/#4-custos","title":"4. Custos","text":"<ul> <li>ClickHouse: Custos variam conforme a infraestrutura usada (n\u00f3s, armazenamento, etc.). Pode ser mais econ\u00f4mico para uso constante e de longo prazo.</li> <li>BigQuery: Modelo de cobran\u00e7a baseado em consulta e armazenamento, adequado para cargas de trabalho vari\u00e1veis e escal\u00e1veis.</li> </ul>"},{"location":"clickhouse/#5-facilidade-de-uso","title":"5. Facilidade de Uso","text":"<ul> <li>ClickHouse: Requer conhecimentos t\u00e9cnicos para configura\u00e7\u00e3o e manuten\u00e7\u00e3o, mas oferece grande flexibilidade e controle.</li> <li>BigQuery: Interface amig\u00e1vel e integra\u00e7\u00e3o com outros servi\u00e7os Google Cloud, ideal para usu\u00e1rios que preferem um ambiente gerenciado.</li> </ul>"},{"location":"clickhouse/#6-casos-de-uso","title":"6. Casos de Uso","text":"<ul> <li>ClickHouse: Ideal para empresas que precisam de um sistema de banco de dados anal\u00edtico interno, com grande controle sobre a configura\u00e7\u00e3o e otimiza\u00e7\u00e3o.</li> <li>BigQuery: Adequado para empresas que preferem um servi\u00e7o gerenciado com escalabilidade autom\u00e1tica, integra\u00e7\u00e3o com outras ferramentas Google Cloud e menos sobrecarga de administra\u00e7\u00e3o.</li> </ul>"},{"location":"clickhouse/#conclusao","title":"Conclus\u00e3o","text":"<p>ClickHouse e Google BigQuery s\u00e3o poderosas solu\u00e7\u00f5es de banco de dados anal\u00edticos, cada uma com suas vantagens e desvantagens. A escolha entre os dois depender\u00e1 das necessidades espec\u00edficas de sua organiza\u00e7\u00e3o, or\u00e7amento, e prefer\u00eancias de gerenciamento de infraestrutura.</p> <ul> <li>ClickHouse: \u00d3timo para controle detalhado e alta performance em um ambiente de servidor gerenciado por voc\u00ea.</li> <li>BigQuery: Excelente para simplicidade, escalabilidade autom\u00e1tica e integra\u00e7\u00e3o com o ecossistema Google Cloud.</li> </ul> <p>Se voc\u00ea est\u00e1 buscando flexibilidade e performance em seu pr\u00f3prio ambiente, o ClickHouse pode ser a escolha certa. Se voc\u00ea prefere um servi\u00e7o gerenciado que cuide da escalabilidade e manuten\u00e7\u00e3o, o BigQuery \u00e9 uma excelente op\u00e7\u00e3o.</p>"},{"location":"miniio/","title":"Mini.IO","text":""},{"location":"miniio/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>MinIO \u00e9 um armazenamento de objetos de alta performance compat\u00edvel com Amazon S3, ideal para armazenamento de grandes volumes de dados. Este guia mostra como configurar e utilizar o MinIO localmente utilizando Docker e enviar arquivos CSV utilizando Python.</p>"},{"location":"miniio/#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>Docker instalado em sua m\u00e1quina. Se voc\u00ea ainda n\u00e3o tem o Docker instalado, siga as instru\u00e7\u00f5es no site oficial do Docker.</li> <li>Python instalado em sua m\u00e1quina. Se voc\u00ea ainda n\u00e3o tem o Python instalado, siga as instru\u00e7\u00f5es no site oficial do Python.</li> </ul>"},{"location":"miniio/#passos-para-configuracao","title":"Passos para Configura\u00e7\u00e3o","text":""},{"location":"miniio/#1-baixar-a-imagem-do-minio","title":"1. Baixar a Imagem do MinIO","text":"<p>Primeiramente, baixe a imagem do MinIO do Docker Hub utilizando o seguinte comando:</p> <pre><code>docker pull minio/minio\n</code></pre>"},{"location":"miniio/#2-executar-o-container-do-minio","title":"2. Executar o Container do MinIO","text":"<p>Ap\u00f3s baixar a imagem, voc\u00ea pode executar um container do MinIO com o comando:</p> <pre><code>docker run -d --name minio-server -p 9000:9000 -p 9001:9001 -e \"MINIO_ROOT_USER=admin\" -e \"MINIO_ROOT_PASSWORD=password123\" minio/minio server /data --console-address \":9001\"\n</code></pre> <p>Substitua <code>admin</code> e <code>password123</code> pelos valores desejados para o usu\u00e1rio root e a senha.</p>"},{"location":"miniio/#3-verificar-o-container-em-execucao","title":"3. Verificar o Container em Execu\u00e7\u00e3o","text":"<p>Para verificar se o container est\u00e1 em execu\u00e7\u00e3o, utilize o comando:</p> <pre><code>docker ps\n</code></pre> <p>Voc\u00ea deve ver algo similar a isso:</p> <pre><code>CONTAINER ID   IMAGE                   COMMAND                  CREATED        STATUS        PORTS                                           NAMES\n&lt;container_id&gt; minio/minio             \"/usr/bin/docker-ent\u2026\"   &lt;some_time&gt;    Up &lt;some_time&gt;   0.0.0.0:9000-&gt;9000/tcp, 0.0.0.0:9001-&gt;9001/tcp  minio-server\n</code></pre>"},{"location":"miniio/#4-acessar-o-console-do-minio","title":"4. Acessar o Console do MinIO","text":"<p>Abra seu navegador e acesse o console do MinIO atrav\u00e9s do endere\u00e7o:</p> <pre><code>http://localhost:9001\n</code></pre> <p>Entre com o usu\u00e1rio e senha que voc\u00ea configurou (<code>admin</code> e <code>password123</code> no exemplo acima).</p>"},{"location":"miniio/#5-instalar-o-minio-client-mc-no-powershell","title":"5. Instalar o MinIO Client (mc) no PowerShell","text":"<p>Para instalar o <code>mc</code> (MinIO Client) no Windows usando PowerShell, siga os seguintes passos:</p> <ol> <li>Baixar o MinIO Client:</li> </ol> <p>Abra o PowerShell e execute o seguinte comando para baixar o <code>mc</code>:</p> <p><code>powershell    Invoke-WebRequest -Uri https://dl.min.io/client/mc/release/windows-amd64/mc.exe -OutFile mc.exe</code></p> <ol> <li>Mover o Execut\u00e1vel para um Local no PATH:</li> </ol> <p>Para facilitar o uso, mova o execut\u00e1vel <code>mc.exe</code> para um diret\u00f3rio inclu\u00eddo na vari\u00e1vel de ambiente <code>PATH</code>. Por exemplo:</p> <p><code>powershell    Move-Item -Path .\\mc.exe -Destination \"C:\\Program Files\\mc.exe\"</code></p> <p>Adicione <code>\"C:\\Program Files\\\"</code> ao <code>PATH</code> se ainda n\u00e3o estiver l\u00e1. Voc\u00ea pode fazer isso atrav\u00e9s das Configura\u00e7\u00f5es do Sistema -&gt; Vari\u00e1veis de Ambiente, ou via PowerShell:</p> <p>```powershell</p> <p>```</p>"},{"location":"miniio/#6-configurar-o-minio-client","title":"6. Configurar o MinIO Client","text":"<p>Ap\u00f3s instalar o <code>mc</code>, configure-o para conectar ao seu servidor MinIO local:</p> <pre><code>mc alias set local http://localhost:9000 admin password123\n</code></pre>"},{"location":"miniio/#7-criar-um-bucket","title":"7. Criar um Bucket","text":"<p>Para criar um bucket, utilize o comando:</p> <pre><code>mc mb local/meu-bucket\n</code></pre>"},{"location":"miniio/#8-enviar-arquivos-csv-com-python","title":"8. Enviar Arquivos CSV com Python","text":"<p>Primeiro, instale o pacote <code>minio</code> utilizando pip:</p> <pre><code>pip install minio\n</code></pre>"},{"location":"miniio/#9-codigo-python-para-enviar-arquivo-csv","title":"9. C\u00f3digo Python para Enviar Arquivo CSV","text":"<p>Aqui est\u00e1 um exemplo de c\u00f3digo Python para enviar um arquivo CSV para o MinIO:</p> <pre><code>from minio import Minio\nfrom minio.error import S3Error\nimport os\n\n# Configurar o cliente MinIO\nclient = Minio(\n    \"localhost:9000\",\n    access_key=\"admin\",\n    secret_key=\"password123\",\n    secure=False\n)\n\n# Nome do bucket e do arquivo\nbucket_name = \"meu-bucket\"\nfile_path = \"exemplo.csv\"\nobject_name = os.path.basename(file_path)\n\n# Criar um arquivo CSV de exemplo\nwith open(file_path, 'w') as f:\n    f.write(\"id,nome\\n\")\n    f.write(\"1,Alice\\n\")\n    f.write(\"2,Bob\\n\")\n\n# Enviar o arquivo CSV para o MinIO\ntry:\n    client.fput_object(bucket_name, object_name, file_path)\n    print(f\"{object_name} enviado com sucesso para {bucket_name}.\")\nexcept S3Error as e:\n    print(\"Erro ao enviar o arquivo:\", e)\n</code></pre>"},{"location":"miniio/#10-executar-o-codigo-python","title":"10. Executar o C\u00f3digo Python","text":"<p>Salve o c\u00f3digo acima em um arquivo Python, por exemplo, <code>upload_csv.py</code>, e execute-o:</p> <pre><code>python upload_csv.py\n</code></pre> <p>Voc\u00ea ver\u00e1 uma mensagem confirmando que o arquivo foi enviado com sucesso para o bucket especificado no MinIO.</p>"},{"location":"miniio/#11-verificar-o-arquivo-no-minio","title":"11. Verificar o Arquivo no MinIO","text":"<p>Acesse o console do MinIO em <code>http://localhost:9001</code>, navegue at\u00e9 o bucket <code>meu-bucket</code> e verifique se o arquivo <code>exemplo.csv</code> est\u00e1 presente.</p>"},{"location":"miniio/#configuracao-de-volume-persistente-opcional","title":"Configura\u00e7\u00e3o de Volume Persistente (Opcional)","text":"<p>Para garantir que seus dados persistam mesmo ap\u00f3s reiniciar o container, voc\u00ea pode configurar volumes do Docker:</p> <pre><code>docker run -d --name minio-server -p 9000:9000 -p 9001:9001 -e \"MINIO_ROOT_USER=admin\" -e \"MINIO_ROOT_PASSWORD=password123\" -v /path/to/minio/data:/data minio/minio server /data --console-address \":9001\"\n</code></pre> <p>Substitua <code>/path/to/minio/data</code> pelo caminho onde voc\u00ea deseja armazenar os dados do MinIO em sua m\u00e1quina local.</p>"},{"location":"miniio/#conclusao","title":"Conclus\u00e3o","text":"<p>Com esses passos, voc\u00ea pode facilmente configurar e utilizar o MinIO localmente utilizando Docker e enviar arquivos CSV utilizando Python. Essa configura\u00e7\u00e3o facilita o desenvolvimento e a realiza\u00e7\u00e3o de testes com o MinIO sem a necessidade de configura\u00e7\u00e3o complexa.</p> <p>Se voc\u00ea tiver alguma d\u00favida ou problema, consulte a documenta\u00e7\u00e3o oficial do MinIO para obter mais detalhes e suporte.</p>"}]}